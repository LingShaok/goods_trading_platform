<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingshao.secondhand.order.dao.OrderDao">

    <insert id="addOrder">
        INSERT INTO `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_number,
            goods_id,
            seller_id,
            buyer_id,
            `transaction`,
            `number`,
            create_time,
            modified_time,
        </trim>
        VALUES
        <foreach collection="orderList" item="order" index="index" separator=",">
            (#{order.orderNumber},
            #{order.goodsId},
            #{order.sellerId},
            #{order.buyerId},
            #{order.Transaction},
            #{order.Number},
            NOW(),
            NOW())
        </foreach>
    </insert>

    <insert id="addOneOrder">
        INSERT INTO `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_number,
            goods_id,
            seller_id,
            buyer_id,
            `transaction`,
            `number`,
            <if test="order.isPayBuyer!=null">
                pay_buyer,
            </if>
            <if test="order.isPaySeller!=null">
                pay_seller,
            </if>
            create_time,
            modified_time,
        </trim>
        VALUES
        (#{order.orderNumber},
        #{order.goodsId},
        #{order.sellerId},
        #{order.buyerId},
        #{order.Transaction},
        #{order.Number},
        <if test="order.isPayBuyer!=null">
            #{order.isPayBuyer},
        </if>
        <if test="order.isPaySeller!=null">
            #{order.isPaySeller},
        </if>
        NOW(),
        NOW())
    </insert>

    <select id="getMyOrder" resultType="com.lingshao.secondhand.order.entry.Order">
        SELECT
	        t1.id,
	        t1.order_number AS orderNumber,
	        t2.goods_name AS goodsName,
	        t1.goods_id AS goodsId,
	        t1.seller_id AS sellerId,
	        t1.buyer_id AS buyerId,
	        t1.`transaction` AS TRANSACTION,
	        t1.`number` AS Number,
	        t1.pay_buyer AS isPayBuyer,
	        t1.pay_seller AS isPaySeller,
	        t1.create_time AS createTime,
	        t1.modified_time AS modifiedTime
        FROM
	        `order` t1
        LEFT JOIN commodity t2 ON t1.goods_id = t2.id
        WHERE
	        t1.buyer_id = #{stuNumber}
	    AND t1.deleteFlag = 0
        OR  t1.seller_id = #{stuNumber}
        AND t1.deleteFlag = 0
    </select>

    <update id="delMyOrder">
        UPDATE `order` SET deleteFlag = 1, modified_time = NOW()
        WHERE order_number = #{orderNumber}
    </update>

    <select id="getOrderByGoodsId" resultType="com.lingshao.secondhand.order.entry.Order">
        SELECT id,order_number AS orderNumber,goods_id AS goodsId,seller_id AS sellerId,
        buyer_id AS buyerId,`transaction` AS Transaction,`number` AS Number,pay_buyer AS isPayBuyer,
        pay_seller AS isPaySeller,create_time AS createTime,modified_time AS modifiedTime
        FROM `order`
        WHERE goods_id = #{commodityId} AND deleteFlag = 0
    </select>

    <select id="getOrderByOrderNum" resultType="com.lingshao.secondhand.order.entry.Order">
        SELECT id,order_number AS orderNumber,goods_id AS goodsId,seller_id AS sellerId,
        buyer_id AS buyerId,`transaction` AS Transaction,`number` AS Number,pay_buyer AS isPayBuyer,
        pay_seller AS isPaySeller,create_time AS createTime,modified_time AS modifiedTime
        FROM `order`
        WHERE order_number = #{orderNumber} AND deleteFlag = 0
    </select>

    <update id="sureBuyerOrder">
        UPDATE `order` SET pay_buyer = 1, modified_time = NOW()
        WHERE order_number = #{orderNumber} AND deleteFlag = 0
    </update>

    <update id="sureSellerOrder">
            UPDATE `order` SET pay_seller = 1, modified_time = NOW()
            WHERE order_number = #{orderNumber} AND deleteFlag = 0
    </update>
</mapper>